{"paragraphs":[{"text":"%md\n\n# SortByKey and Collect\n\n- Many times it is useful to sort the pair RDD based on the key (for example word count which you'll see later in the chapter). In this exercise, you'll sort the pair RDD `Rdd_Reduced` that you created in the previous exercise into descending order and print the final output.\n\n- Remember, you already have a `SparkContext` `sc` and `Rdd_Reduced` available in your workspace.\n\n## Instructions\n- Sort the `Rdd_Reduced` RDD using the key in descending order.\n- Collect the contents and iterate to print the output.","user":"anonymous","dateUpdated":"2021-02-26T15:17:51+0530","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>SortByKey and Collect</h1>\n<ul>\n  <li>\n  <p>Many times it is useful to sort the pair RDD based on the key (for example word count which you&rsquo;ll see later in the chapter). In this exercise, you&rsquo;ll sort the pair RDD <code>Rdd_Reduced</code> that you created in the previous exercise into descending order and print the final output.</p></li>\n  <li>\n  <p>Remember, you already have a <code>SparkContext</code> <code>sc</code> and <code>Rdd_Reduced</code> available in your workspace.</p></li>\n</ul>\n<h2>Instructions</h2>\n<ul>\n  <li>Sort the <code>Rdd_Reduced</code> RDD using the key in descending order.</li>\n  <li>Collect the contents and iterate to print the output.</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1614331437488_-2112843956","id":"20201113-110338_1928025495","dateCreated":"2021-02-26T14:53:57+0530","dateStarted":"2021-02-26T15:17:51+0530","dateFinished":"2021-02-26T15:17:52+0530","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9622"},{"text":"%pyspark\n\n# Create PairRDD Rdd with key value pairs\nRdd = sc.parallelize([(1,2),(3,4),(3,6),(4,5)])\n\n# Apply reduceByKey() operation on Rdd\nRdd_Reduced = Rdd.reduceByKey(lambda x, y: x + y)\n\n# Sort the reduced RDD with the key by descending order\nRdd_Reduced_Sort = Rdd_Reduced.____(ascending=False)\n\n# Iterate over the result and print the output\nfor num in Rdd_Reduced_Sort.____():\n  print(\"Key {} has {} Counts\".format(____, num[1]))","user":"anonymous","dateUpdated":"2021-02-26T14:53:57+0530","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1614331437493_-1078919306","id":"20201113-133413_165094595","dateCreated":"2021-02-26T14:53:57+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9623"},{"text":"%pyspark\n\nRdd = sc.parallelize([(1,2),(3,4),(3,6),(4,5)])\nRdd_Reduced = Rdd.reduceByKey(lambda x, y: x + y)\n\nRdd_Reduced_Sort = Rdd_Reduced.sortByKey(ascending=False)\n\nfor num in Rdd_Reduced_Sort.collect():\n  print(\"Key {} has {} Counts\".format(num[0], num[1]))","user":"anonymous","dateUpdated":"2021-02-26T15:51:18+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Key 4 has 5 Counts\nKey 3 has 10 Counts\nKey 1 has 2 Counts\n"}]},"apps":[],"jobName":"paragraph_1614332889454_1846407805","id":"20210226-151809_592536573","dateCreated":"2021-02-26T15:18:09+0530","dateStarted":"2021-02-26T15:51:18+0530","dateFinished":"2021-02-26T15:51:19+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9624"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2021-02-26T15:19:42+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1614332982724_-643940713","id":"20210226-151942_1947277081","dateCreated":"2021-02-26T15:19:42+0530","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:9625"}],"name":"/BDFWithPySpark/M2/SM3/Ex2","id":"2G1MDNB2Y","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}