{"paragraphs":[{"text":"%md\n\n# Filtering your DataFrame\n\n- In the previous exercise, you have subset the data using `select()` operator which is mainly used to subset the DataFrame column-wise. What if you want to subset the DataFrame based on a condition (for example, select all rows where the sex is Female). In this exercise, you will filter the rows in the `people_df` DataFrame in which `'sex'` is `female` and `male` and create two different datasets. Finally, you'll count the number of rows in each of those datasets.\n\n- Remember, you already have `SparkSession` `spark` and `people_df` DataFrame available in your workspace.\n\n## Instructions\n- Filter the `people_df` DataFrame to select all rows where `sex` is `female` into `people_df_female` DataFrame.\n- Filter the `people_df` DataFrame to select all rows where `sex` is `male` into `people_df_male` DataFrame.\n- Count the number of rows in `people_df_female` and `people_df_male` DataFrames.","user":"anonymous","dateUpdated":"2021-03-01T12:44:49+0530","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Filtering your DataFrame</h1>\n<ul>\n  <li>\n  <p>In the previous exercise, you have subset the data using <code>select()</code> operator which is mainly used to subset the DataFrame column-wise. What if you want to subset the DataFrame based on a condition (for example, select all rows where the sex is Female). In this exercise, you will filter the rows in the <code>people_df</code> DataFrame in which <code>&#39;sex&#39;</code> is <code>female</code> and <code>male</code> and create two different datasets. Finally, you&rsquo;ll count the number of rows in each of those datasets.</p></li>\n  <li>\n  <p>Remember, you already have <code>SparkSession</code> <code>spark</code> and <code>people_df</code> DataFrame available in your workspace.</p></li>\n</ul>\n<h2>Instructions</h2>\n<ul>\n  <li>Filter the <code>people_df</code> DataFrame to select all rows where <code>sex</code> is <code>female</code> into <code>people_df_female</code> DataFrame.</li>\n  <li>Filter the <code>people_df</code> DataFrame to select all rows where <code>sex</code> is <code>male</code> into <code>people_df_male</code> DataFrame.</li>\n  <li>Count the number of rows in <code>people_df_female</code> and <code>people_df_male</code> DataFrames.</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1614582111010_-1099848922","id":"20201113-110338_1928025495","dateCreated":"2021-03-01T12:31:51+0530","dateStarted":"2021-03-01T12:44:49+0530","dateFinished":"2021-03-01T12:44:49+0530","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4085"},{"text":"%pyspark\n\nfile_path = \"file:////home/talentum/BigDataFundamentalsWithPySpark/Dataset/people.csv\"\n\n# Create an DataFrame from file_path\npeople_df = spark.read.csv(file_path, header=True, inferSchema=True)\n\n# Filter people_df to select females \npeople_df_female = people_df.____(people_df.____ == \"female\")\n\n# Filter people_df to select males\npeople_df_male = people_df.____(____ == \"____\")\n\n# Count the number of rows \nprint(\"There are {} rows in the people_df_female DataFrame and {} rows in the people_df_male DataFrame\".format(people_df_female.____(), people_df_male.____()))","user":"anonymous","dateUpdated":"2021-03-01T12:31:51+0530","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1614582111013_1684917983","id":"20201113-133413_165094595","dateCreated":"2021-03-01T12:31:51+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4086"},{"text":"%pyspark\n\nfile_path = \"file:////home/talentum/shared_BDVM/spark/DataSet/people.csv\"\npeople_df = spark.read.csv(file_path, header=True, inferSchema=True)\n\npeople_df_female = people_df.filter(people_df.sex == 'female')\npeople_df_male = people_df.filter(people_df.sex == 'male')\nprint(\"There are {} rows in the people_df_female DataFrame and {} rows in the people_df_male DataFrame\".format(people_df_female.count(), people_df_male.count()))","user":"anonymous","dateUpdated":"2021-03-01T12:47:25+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"There are 49014 rows in the people_df_female DataFrame and 49066 rows in the people_df_male DataFrame\n"}]},"apps":[],"jobName":"paragraph_1614582915255_1380428299","id":"20210301-124515_1020289713","dateCreated":"2021-03-01T12:45:15+0530","dateStarted":"2021-03-01T12:47:25+0530","dateFinished":"2021-03-01T12:47:28+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4087"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2021-03-01T12:47:25+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1614583045494_1112863960","id":"20210301-124725_1562123040","dateCreated":"2021-03-01T12:47:25+0530","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:4088"}],"name":"/BDFWithPySpark/M3/SM2/Ex3","id":"2G1S8AQR3","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}